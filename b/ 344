#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long int llu;
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define mem(a, v) memset(a, v, sizeof(a))
#define PI acos(-1)
#define S(a) scanf("%d",&a)
#define SL(a) scanf("%lld",&a)
#define S2(a, b) scanf("%d%d",&a,&b)
#define nl printf("\n")
const ll mod = 1000000007LL;
const int lmt = 10000005;

vector<pair<ll, char>> a, b;
string s, t;
map<int, ll> rec;

int z[lmt];

void Z(int n){
    int L = 0, R = 0;
    for (int i = 1; i < n; i++) {
        if (i > R) {
            L = R = i;
            while (R < n && s[R-L] == s[R]) R++;
            z[i] = R-L; R--;
        } 
        else {
            int k = i-L;
            if (z[k] < R-i+1) z[i] = z[k];
            else {
                L = i;
                  while (R < n && s[R-L] == s[R]) R++;
                  z[i] = R-L; R--;
            }
        }
    }
}

void tostring(){
    for(int i = 0; i < a.size(); i++){
        s += to_string(a[i].X);
        rec[s.size()] = a[i].X;
        //cout<<s.size()<<" "<<a[i].X;nl;
        s += a[i].Y;
    }
    t += b[0].Y;
    for(int i = 1; i < b.size() - 1; i++){
        t += to_string(b[i].X);
        t += b[i].Y;
    }
    s = t+"#"+s;
}

void solve(){
    //cout<<s;nl;
    int m = t.size(), n = s.size();
    ll ans = 0;
    for(int i = 0; i < n; i++){
        if(z[i] == m){
            //cout<<i;nl;
            bool flag = true;
            if(rec[i-m-1] < b[0].X) flag = false;
            if(flag){
                int z = i+m;
                ll dig = 0;
                while(s[z] >= '0' && s[z] <= '9' && z < n){
                    dig = dig*10 + s[z]-'0';
                    z++;
                }
                //cout<<dig<<" "<<s[z];nl;
                if(dig < b[b.size() - 1].X) flag = false;
                //cout<<b[b.size() - 1].X<<" "<<b[b.size() - 1].Y;nl;
                if(s[z] != b[b.size() - 1].Y) flag = false;
                //cout<<flag;nl;
            }
            if(flag) ans++;
        }
    }
    printf("%lld\n",ans);
}

void solve1(){
    ll ans = 0;
    ////cout<<"here\n";
    for(int i = 0; i < a.size(); i++){
        if(a[i].Y == b[0].Y){
            ans += max(0LL, a[i].X - b[0].X + 1);
        }
    }

    printf("%lld\n",ans);
}

int main(){
    int n, m, z;
    S2(n, m);
    for(int i = 0; i < n; i++){
        ll x; char y;
        scanf("%lld-%c",&x,&y);
        if(!a.empty() && a[a.size()-1].Y == y)
            a[a.size()-1].X += x;
        else
            a.push_back(make_pair(x, y));
    }
    for(int i = 0; i < m; i++){
        ll x; char y;
        scanf("%lld-%c",&x,&y);
        if(!b.empty() && b[b.size()-1].Y == y)
            b[b.size()-1].X += x;
        else
            b.push_back(make_pair(x, y));
    }
    tostring();
    Z(s.size());
    if(b.size() == 1){
        solve1();
        return 0;
    }
    solve();
    return 0;
}
/*
5 2
3-a 2-a 1-b 2-b 3-b
1-a 1-b
*/
